{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv Sharma\\\\Eccomercechatbot\\\\frontend\\\\src\\\\components\\\\chatwindow.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport api from '../utils/api'; // Axios instance with JWT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  token,\n  setToken\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n\n  // Format timestamp\n  const formatTimestamp = date => {\n    return new Date(date).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: message,\n      timestamp: new Date()\n    };\n    setChatLog(prev => [...prev, userMessage]);\n    try {\n      const res = await api.post('/chat/message', {\n        message\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const botResponse = {\n        sender: 'bot',\n        text: res.data.response,\n        timestamp: new Date()\n      };\n      setChatLog(prev => [...prev, botResponse]);\n      setMessage('');\n    } catch (err) {\n      var _err$response;\n      console.error(err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        alert('Session expired. Please log in again.');\n        setToken('');\n      } else {\n        alert('Error communicating with chatbot.');\n      }\n    }\n  };\n  const resetConversation = () => {\n    setChatLog([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"E-commerce Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 300,\n        maxHeight: 400,\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        padding: 10,\n        marginBottom: 10\n      },\n      children: chatLog.map((chat, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: chat.sender === 'user' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [chat.sender === 'user' ? 'You' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), \" \", chat.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: '#888'\n            },\n            children: formatTimestamp(chat.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && sendMessage(),\n      style: {\n        width: '70%',\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetConversation,\n      style: {\n        marginLeft: 10,\n        backgroundColor: '#f0f0f0'\n      },\n      children: \"Reset Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","api","jsxDEV","_jsxDEV","ChatWindow","token","setToken","_s","message","setMessage","chatLog","setChatLog","formatTimestamp","date","Date","toLocaleTimeString","hour","minute","sendMessage","trim","userMessage","sender","text","timestamp","prev","res","post","headers","Authorization","botResponse","data","response","err","_err$response","console","error","status","alert","resetConversation","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","minHeight","maxHeight","overflowY","border","marginBottom","map","chat","idx","textAlign","margin","color","type","placeholder","value","onChange","e","target","onKeyDown","key","width","marginRight","onClick","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Dhruv Sharma/Eccomercechatbot/frontend/src/components/chatwindow.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport api from '../utils/api'; // Axios instance with JWT\r\n\r\nfunction ChatWindow({ token, setToken }) {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  // Format timestamp\r\n  const formatTimestamp = (date) => {\r\n    return new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', text: message, timestamp: new Date() };\r\n    setChatLog(prev => [...prev, userMessage]);\r\n\r\n    try {\r\n      const res = await api.post(\r\n        '/chat/message',\r\n        { message },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      const botResponse = {\r\n        sender: 'bot',\r\n        text: res.data.response,\r\n        timestamp: new Date()\r\n      };\r\n      setChatLog(prev => [...prev, botResponse]);\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      if (err.response?.status === 401) {\r\n        alert('Session expired. Please log in again.');\r\n        setToken('');\r\n      } else {\r\n        alert('Error communicating with chatbot.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetConversation = () => {\r\n    setChatLog([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>E-commerce Chatbot</h2>\r\n      \r\n      <div style={{ minHeight: 300, maxHeight: 400, overflowY: 'auto', border: '1px solid #ccc', padding: 10, marginBottom: 10 }}>\r\n        {chatLog.map((chat, idx) => (\r\n          <div key={idx} style={{ textAlign: chat.sender === 'user' ? 'right' : 'left' }}>\r\n            <p style={{ margin: '5px 0' }}>\r\n              <b>{chat.sender === 'user' ? 'You' : 'Bot'}:</b> {chat.text}\r\n              <br />\r\n              <small style={{ color: '#888' }}>{formatTimestamp(chat.timestamp)}</small>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type your message\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n        onKeyDown={e => e.key === 'Enter' && sendMessage()}\r\n        style={{ width: '70%', marginRight: 10 }}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <button onClick={resetConversation} style={{ marginLeft: 10, backgroundColor: '#f0f0f0' }}>\r\n        Reset Conversation\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}